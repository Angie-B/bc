#======================================================================
# Re-make lecture materials.
#======================================================================

# Directories.
SITE = _site
INSTALL = $(HOME)/sites/software-carpentry.org/v5
LINKS = /tmp/bc-links
TRANSLATED = translated

# Templates for nbconvert and Pandoc.
IPYNB_TPL = _templates/ipynb.tpl
BOOK_TPL = _templates/book.tpl

# Principal target files.
INDEX = $(SITE)/index.html

#----------------------------------------------------------------------
# Specify the default target before any other targets are defined so
# that we're sure which one Make will choose.
#----------------------------------------------------------------------

all : commands

#----------------------------------------------------------------------
# Create Markdown versions of IPython Notebooks in TRANSLATED directory.
#----------------------------------------------------------------------

# IPython Notebooks (split by directory so that they can be
# interpolated into other variables later on).
IPYNB_SRC_PYTHON = $(sort $(wildcard novice/python/??-*.ipynb))
IPYNB_SRC_SQL = $(sort $(wildcard novice/sql/??-*.ipynb))

# Notebooks converted to Markdown.
IPYNB_TX_PYTHON = $(patsubst %.ipynb,$(TRANSLATED)/%.md,$(IPYNB_SRC_PYTHON))
IPYNB_TX_SQL = $(patsubst %.ipynb,$(TRANSLATED)/%.md,$(IPYNB_SRC_SQL))

# Convert a .ipynb to .md.
$(TRANSLATED)/%.md : %.ipynb $(IPYNB_TPL)
	ipython nbconvert --template=$(IPYNB_TPL) --to=markdown --output="$(subst .md,,$@)" "$<"

#----------------------------------------------------------------------
# Page source (in Markdown).  These are listed in the order in which
# they appear in the final book-format version of the notes, and
# include Markdown files generated by other tools from other formats.
# ----------------------------------------------------------------------

# Raw Markdown.  This does *not* include the index.html page used as a
# homepage for bootcamps; we make that depend on these files in the
# next rule so that exactly one Jekyll build is triggered.
PAGES_SRC = \
	contents.md \
	intro.md \
	team.md \
	novice/shell/index.md $(sort $(wildcard novice/shell/??-*.md)) \
	novice/git/index.md $(sort $(wildcard novice/git/??-*.md)) \
	novice/python/index.md $(IPYNB_TX_PYTHON) \
	novice/sql/index.md $(IPYNB_TX_SQL) \
	novice/extras/index.md $(sort $(wildcard novice/extras/??-*.md)) \
	novice/teaching/index.md  $(sort $(wildcard novice/teaching/??-*.md)) \
	novice/ref/index.md  $(sort $(wildcard novice/ref/??-*.md)) \
	bib.md \
	gloss.md \
	rules.md \
	LICENSE.md

# Convert from Markdown to HTML.  This builds *all* the pages (Jekyll
# only does batch mode), and erases the SITE directory first, so
# having the output index.html file depend on all the page source
# Markdown files triggers the desired build once and only once.
$(INDEX) : $(PAGES_SRC)
	jekyll -t build -d $(SITE)

#----------------------------------------------------------------------
# Targets.
#----------------------------------------------------------------------

## commands : show all commands.
commands :
	@grep -E '^##' Makefile | sed -e 's/## //g'

## gh       : build the site as GitHub will see it.
gh : $(INDEX)

## contribs : list contributors (uses .mailmap file).
contribs :
	git log --pretty=format:%aN | sort | uniq

## fixme    : find places where fixes are needed.
fixme :
	@grep -i -n FIXME $$(find novice -type f -print | grep -v .ipynb_checkpoints)

## clean    : clean up all generated files.
clean : tidy
	rm -rf $(SITE)

## tidy     : clean up odds and ends.
tidy :
	rm -rf \
	$$(find . -name '*~' -print) \
	$$(find . -name '*.pyc' -print)
