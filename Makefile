#======================================================================
# Re-make lecture materials.
#======================================================================

# Directories.
SITE = _site
INSTALL = $(HOME)/sites/software-carpentry.org/v5
LINKS = /tmp/bc-links
TRANSLATED = translated

# nbconvert/Pandoc templates.
IPYNB_TPL = _templates/ipynb.tpl
BOOK_TPL = _templates/book.tpl
LESSON_TPL = _templates/lesson.tpl

# Target files.
BOOK = $(LESSONS)/book.html
INDEX = $(LESSONS)/index.html

#----------------------------------------------------------------------
# Specify the default target before any other targets are defined so
# that we're sure which one Make will choose.
#----------------------------------------------------------------------

all : commands

#----------------------------------------------------------------------
# Create Markdown versions of IPython Notebooks in TRANSLATED directory.
#----------------------------------------------------------------------

# IPython Notebooks (split by directory so that they can be
# interpolated into other variables later on).
IPYNB_SRC_PYTHON = $(sort $(wildcard novice/python/??-*.ipynb))
IPYNB_SRC_SQL = $(sort $(wildcard novice/sql/??-*.ipynb))

# Notebooks converted to Markdown.
IPYNB_TX_PYTHON = $(patsubst %.ipynb,$(TRANSLATED)/%.md,$(IPYNB_SRC_PYTHON))
IPYNB_TX_SQL = $(patsubst %.ipynb,$(TRANSLATED)/%.md,$(IPYNB_SRC_SQL))

# Convert from .ipynb to .md.
$(TRANSLATED)/%.md : %.ipynb $(IPYNB_TPL)
	ipython nbconvert --template=$(IPYNB_TPL) --to=markdown --output="$(subst .md,,$@)" "$<"

#----------------------------------------------------------------------
# Page source (in Markdown).  These are listed in the order in which
# they appear in the final book-format version of the notes, and
# include files generated by other tools from other formats.
# ----------------------------------------------------------------------

# Raw Markdown.
PAGES_SRC = \
	contents.md \
	intro.md \
	team.md \
	novice/shell/index.md $(sort $(wildcard novice/shell/??-*.md)) \
	novice/git/index.md $(sort $(wildcard novice/git/??-*.md)) \
	novice/python/index.md $(IPYNB_TX_PYTHON) \
	novice/sql/index.md $(IPYNB_TX_SQL) \
	novice/extras/index.md $(sort $(wildcard novice/extras/??-*.md)) \
	novice/teaching/index.md  $(sort $(wildcard novice/teaching/??-*.md)) \
	novice/ref/index.md  $(sort $(wildcard novice/ref/??-*.md)) \
	bib.md \
	gloss.md \
	rules.md \
	LICENSE.md

# Compiled from Markdown.
PAGES_DST = $(patsubst %.md,$(SITE)/%.html,$(PAGES_SRC))

# Convert from Markdown to HTML.  Unfortunately, this builds *all* the
# pages (Jekyll only does batch mode).  Equally unfortunately, it erases
# everything in the SITE directory first.
$(SITE)/%.html : %.md
	jekyll -t build -d $(SITE)

#----------------------------------------------------------------------
# All invokable targets.
#----------------------------------------------------------------------

## commands : show all commands.
commands :
	@grep -E '^##' Makefile | sed -e 's/## //g'

## gh       : build the site as GitHub will see it.
gh : $(PAGES_DST)

## txlate   : translate from other source formats into Markdown.
txlate : $(IPYNB_TX_PYTHON) $(IPYNB_TX_SQL)

## contribs : list contributors (uses .mailmap file).
contribs :
	git log --pretty=format:%aN | sort | uniq

## fixme    : find places where fixes are needed.
fixme :
	@grep -i -n FIXME $$(find -f novice -type f -print | grep -v .ipynb_checkpoints)

## clean    : clean up all generated files.
clean : tidy
	rm -rf $(SITE)

## tidy     : clean up intermediate files only.
tidy :
	rm -rf \
	$$(find . -name '*~' -print) \
	$$(find . -name '*.pyc' -print)
